<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.geilove.dao.TweetMapper" >
  <resultMap id="BaseResultMap" type="org.geilove.pojo.Tweet" >
    <id column="tweetID" property="tweetid" jdbcType="BIGINT" />
    <result column="userIDTweet" property="useridtweet" jdbcType="BIGINT" />
    <result column="sourceMsgID" property="sourcemsgid" jdbcType="BIGINT" />
    <result column="tagID" property="tagid" jdbcType="TINYINT" />
    <result column="msgContent" property="msgcontent" jdbcType="VARCHAR" />
    <result column="topic" property="topic" jdbcType="BIGINT" />
    <result column="commentTimes" property="commenttimes" jdbcType="INTEGER" />
    <result column="ok" property="ok" jdbcType="INTEGER" />
    <result column="boxTimes" property="boxtimes" jdbcType="INTEGER" />
    <result column="publishTime" property="publishtime" jdbcType="TIMESTAMP" />
    <result column="reportedTimes" property="reportedtimes" jdbcType="INTEGER" />
    <result column="publicSee" property="publicsee" jdbcType="TINYINT" />
    <result column="deleteTag" property="deletetag" jdbcType="TINYINT" />
    <result column="videoAddress" property="videoaddress" jdbcType="VARCHAR" />
    <result column="tweetbackUpOne" property="tweetbackupone" jdbcType="VARCHAR" />
    <result column="tweetbackUpTwo" property="tweetbackuptwo" jdbcType="VARCHAR" />
    <result column="tweetbackUpThree" property="tweetbackupthree" jdbcType="VARCHAR" />
    <result column="tweetbackupFour" property="tweetbackupfour" jdbcType="INTEGER" />
    <result column="tweetbackupFive" property="tweetbackupfive" jdbcType="INTEGER" />
    <result column="tweetbackupSix" property="tweetbackupsix" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    tweetID, userIDTweet, sourceMsgID, tagID, msgContent, topic, commentTimes, ok, boxTimes, 
    publishTime, reportedTimes, publicSee, deleteTag, videoAddress, tweetbackUpOne, tweetbackUpTwo, 
    tweetbackUpThree, tweetbackupFour, tweetbackupFive, tweetbackupSix
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tweet
    where tweetID = #{tweetid,jdbcType=BIGINT}
  </select>
  <!--  以下是自定义 -->
  <select id="selectByMainKey" resultMap="BaseResultMap" parameterType="java.util.HashMap">
       select
       <include refid="Base_Column_List" />
       from 
           tweet     
       where  
           userIDTweet= #{userID,jdbcType=INTEGER} 
      order by publishTime  desc
      limit #{page, jdbcType=INTEGER},#{pageSize, jdbcType=INTEGER}
  </select>
  <!--  自定义select结束 -->
  <!-- 自定义开始 -->
  <select id="findByIdsMap" resultMap="BaseResultMap">
         Select
         <include refid="Base_Column_List" />
         from tweet where ID in
                <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                        #{item}
                </foreach>
  </select> 
  <!-- 自定义结束 -->
    
    
    
    
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tweet
    where tweetID = #{tweetid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.geilove.pojo.Tweet" >
    insert into tweet (tweetID, userIDTweet, sourceMsgID, 
      tagID, msgContent, topic, 
      commentTimes, ok, boxTimes, 
      publishTime, reportedTimes, publicSee, 
      deleteTag, videoAddress, tweetbackUpOne, 
      tweetbackUpTwo, tweetbackUpThree, tweetbackupFour, 
      tweetbackupFive, tweetbackupSix)
    values (#{tweetid,jdbcType=BIGINT}, #{useridtweet,jdbcType=BIGINT}, #{sourcemsgid,jdbcType=BIGINT}, 
      #{tagid,jdbcType=TINYINT}, #{msgcontent,jdbcType=VARCHAR}, #{topic,jdbcType=BIGINT}, 
      #{commenttimes,jdbcType=INTEGER}, #{ok,jdbcType=INTEGER}, #{boxtimes,jdbcType=INTEGER}, 
      #{publishtime,jdbcType=TIMESTAMP}, #{reportedtimes,jdbcType=INTEGER}, #{publicsee,jdbcType=TINYINT}, 
      #{deletetag,jdbcType=TINYINT}, #{videoaddress,jdbcType=VARCHAR}, #{tweetbackupone,jdbcType=VARCHAR}, 
      #{tweetbackuptwo,jdbcType=VARCHAR}, #{tweetbackupthree,jdbcType=VARCHAR}, #{tweetbackupfour,jdbcType=INTEGER}, 
      #{tweetbackupfive,jdbcType=INTEGER}, #{tweetbackupsix,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.geilove.pojo.Tweet" >
    insert into tweet
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tweetid != null" >
        tweetID,
      </if>
      <if test="useridtweet != null" >
        userIDTweet,
      </if>
      <if test="sourcemsgid != null" >
        sourceMsgID,
      </if>
      <if test="tagid != null" >
        tagID,
      </if>
      <if test="msgcontent != null" >
        msgContent,
      </if>
      <if test="topic != null" >
        topic,
      </if>
      <if test="commenttimes != null" >
        commentTimes,
      </if>
      <if test="ok != null" >
        ok,
      </if>
      <if test="boxtimes != null" >
        boxTimes,
      </if>
      <if test="publishtime != null" >
        publishTime,
      </if>
      <if test="reportedtimes != null" >
        reportedTimes,
      </if>
      <if test="publicsee != null" >
        publicSee,
      </if>
      <if test="deletetag != null" >
        deleteTag,
      </if>
      <if test="videoaddress != null" >
        videoAddress,
      </if>
      <if test="tweetbackupone != null" >
        tweetbackUpOne,
      </if>
      <if test="tweetbackuptwo != null" >
        tweetbackUpTwo,
      </if>
      <if test="tweetbackupthree != null" >
        tweetbackUpThree,
      </if>
      <if test="tweetbackupfour != null" >
        tweetbackupFour,
      </if>
      <if test="tweetbackupfive != null" >
        tweetbackupFive,
      </if>
      <if test="tweetbackupsix != null" >
        tweetbackupSix,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tweetid != null" >
        #{tweetid,jdbcType=BIGINT},
      </if>
      <if test="useridtweet != null" >
        #{useridtweet,jdbcType=BIGINT},
      </if>
      <if test="sourcemsgid != null" >
        #{sourcemsgid,jdbcType=BIGINT},
      </if>
      <if test="tagid != null" >
        #{tagid,jdbcType=TINYINT},
      </if>
      <if test="msgcontent != null" >
        #{msgcontent,jdbcType=VARCHAR},
      </if>
      <if test="topic != null" >
        #{topic,jdbcType=BIGINT},
      </if>
      <if test="commenttimes != null" >
        #{commenttimes,jdbcType=INTEGER},
      </if>
      <if test="ok != null" >
        #{ok,jdbcType=INTEGER},
      </if>
      <if test="boxtimes != null" >
        #{boxtimes,jdbcType=INTEGER},
      </if>
      <if test="publishtime != null" >
        #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="reportedtimes != null" >
        #{reportedtimes,jdbcType=INTEGER},
      </if>
      <if test="publicsee != null" >
        #{publicsee,jdbcType=TINYINT},
      </if>
      <if test="deletetag != null" >
        #{deletetag,jdbcType=TINYINT},
      </if>
      <if test="videoaddress != null" >
        #{videoaddress,jdbcType=VARCHAR},
      </if>
      <if test="tweetbackupone != null" >
        #{tweetbackupone,jdbcType=VARCHAR},
      </if>
      <if test="tweetbackuptwo != null" >
        #{tweetbackuptwo,jdbcType=VARCHAR},
      </if>
      <if test="tweetbackupthree != null" >
        #{tweetbackupthree,jdbcType=VARCHAR},
      </if>
      <if test="tweetbackupfour != null" >
        #{tweetbackupfour,jdbcType=INTEGER},
      </if>
      <if test="tweetbackupfive != null" >
        #{tweetbackupfive,jdbcType=INTEGER},
      </if>
      <if test="tweetbackupsix != null" >
        #{tweetbackupsix,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.geilove.pojo.Tweet" >
    update tweet
    <set >
      <if test="useridtweet != null" >
        userIDTweet = #{useridtweet,jdbcType=BIGINT},
      </if>
      <if test="sourcemsgid != null" >
        sourceMsgID = #{sourcemsgid,jdbcType=BIGINT},
      </if>
      <if test="tagid != null" >
        tagID = #{tagid,jdbcType=TINYINT},
      </if>
      <if test="msgcontent != null" >
        msgContent = #{msgcontent,jdbcType=VARCHAR},
      </if>
      <if test="topic != null" >
        topic = #{topic,jdbcType=BIGINT},
      </if>
      <if test="commenttimes != null" >
        commentTimes = #{commenttimes,jdbcType=INTEGER},
      </if>
      <if test="ok != null" >
        ok = #{ok,jdbcType=INTEGER},
      </if>
      <if test="boxtimes != null" >
        boxTimes = #{boxtimes,jdbcType=INTEGER},
      </if>
      <if test="publishtime != null" >
        publishTime = #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="reportedtimes != null" >
        reportedTimes = #{reportedtimes,jdbcType=INTEGER},
      </if>
      <if test="publicsee != null" >
        publicSee = #{publicsee,jdbcType=TINYINT},
      </if>
      <if test="deletetag != null" >
        deleteTag = #{deletetag,jdbcType=TINYINT},
      </if>
      <if test="videoaddress != null" >
        videoAddress = #{videoaddress,jdbcType=VARCHAR},
      </if>
      <if test="tweetbackupone != null" >
        tweetbackUpOne = #{tweetbackupone,jdbcType=VARCHAR},
      </if>
      <if test="tweetbackuptwo != null" >
        tweetbackUpTwo = #{tweetbackuptwo,jdbcType=VARCHAR},
      </if>
      <if test="tweetbackupthree != null" >
        tweetbackUpThree = #{tweetbackupthree,jdbcType=VARCHAR},
      </if>
      <if test="tweetbackupfour != null" >
        tweetbackupFour = #{tweetbackupfour,jdbcType=INTEGER},
      </if>
      <if test="tweetbackupfive != null" >
        tweetbackupFive = #{tweetbackupfive,jdbcType=INTEGER},
      </if>
      <if test="tweetbackupsix != null" >
        tweetbackupSix = #{tweetbackupsix,jdbcType=INTEGER},
      </if>
    </set>
    where tweetID = #{tweetid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.geilove.pojo.Tweet" >
    update tweet
    set userIDTweet = #{useridtweet,jdbcType=BIGINT},
      sourceMsgID = #{sourcemsgid,jdbcType=BIGINT},
      tagID = #{tagid,jdbcType=TINYINT},
      msgContent = #{msgcontent,jdbcType=VARCHAR},
      topic = #{topic,jdbcType=BIGINT},
      commentTimes = #{commenttimes,jdbcType=INTEGER},
      ok = #{ok,jdbcType=INTEGER},
      boxTimes = #{boxtimes,jdbcType=INTEGER},
      publishTime = #{publishtime,jdbcType=TIMESTAMP},
      reportedTimes = #{reportedtimes,jdbcType=INTEGER},
      publicSee = #{publicsee,jdbcType=TINYINT},
      deleteTag = #{deletetag,jdbcType=TINYINT},
      videoAddress = #{videoaddress,jdbcType=VARCHAR},
      tweetbackUpOne = #{tweetbackupone,jdbcType=VARCHAR},
      tweetbackUpTwo = #{tweetbackuptwo,jdbcType=VARCHAR},
      tweetbackUpThree = #{tweetbackupthree,jdbcType=VARCHAR},
      tweetbackupFour = #{tweetbackupfour,jdbcType=INTEGER},
      tweetbackupFive = #{tweetbackupfive,jdbcType=INTEGER},
      tweetbackupSix = #{tweetbackupsix,jdbcType=INTEGER}
    where tweetID = #{tweetid,jdbcType=BIGINT}
  </update>
</mapper>